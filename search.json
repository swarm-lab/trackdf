[{"path":"https://swarm-lab.github.io/trackdf/articles/z1_install.html","id":"development-version","dir":"Articles","previous_headings":"","what":"1.1 - Development version","title":"1 - Installing trackdf","text":"","code":"if (requireNamespace(\"remotes\", quietly = TRUE)) {   remotes::install_github(\"swarm-lab/trackdf\") }"},{"path":"https://swarm-lab.github.io/trackdf/articles/z1_install.html","id":"cran-version","dir":"Articles","previous_headings":"","what":"1.2 - CRAN version","title":"1 - Installing trackdf","text":"","code":"install.packages(\"trackdf\")"},{"path":"https://swarm-lab.github.io/trackdf/articles/z2_build.html","id":"using-video-tracking-data","dir":"Articles","previous_headings":"","what":"2.1 - Using video tracking data","title":"2 - Building a track table","text":"","code":"library(trackdf) library(lubridate)  if (requireNamespace(\"readr\", quietly = TRUE) & requireNamespace(\"dplyr\", quietly = TRUE)) {   library(readr)   library(dplyr)   raw <- read_csv(system.file(\"extdata/video/01.csv\", package = \"trackdf\")) %>%     filter(., !ignore) } else {   raw <- read.csv(system.file(\"extdata/video/01.csv\", package = \"trackdf\"))   raw <- raw[!raw$ignore, ] }  raw ## # A tibble: 21,982 × 8 ##       id     x     y  size frame track ignore track_fixed ##    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <lgl>        <dbl> ##  1     1  629.  882.  1154     1     1 FALSE            1 ##  2     2 1056.  657.  1064     1     2 FALSE            2 ##  3     3  508.  375.  1624     1     3 FALSE            3 ##  4     4 1278.  374.  1443     1     4 FALSE            4 ##  5     5 1379.  343.  1431     1     5 FALSE            5 ##  6     6 1137.  175.  1321     1     6 FALSE            6 ##  7     7  737.  116.  1419     1     7 FALSE            7 ##  8     8  922.  103.  1237     1     8 FALSE            8 ##  9     1  629.  882.  1148     2     1 FALSE            1 ## 10     2 1056.  656.  1068     2     2 FALSE            2 ## # … with 21,972 more rows vid_df <- track(x = raw$x, y = raw$y, t = raw$frame, id = raw$track,                  origin = \"2019-03-24 12:55:23\", period = period(\"1 second\") / 30,                  tz = \"America/New_York\", table = \"df\") head(vid_df) ## Track table [6 observations] ## Number of tracks:  6  ## Dimensions:  2D  ## Geographic:  FALSE  ## Table class:  data frame ##   id                   t         x        y ## 1  1 2019-03-24 12:55:23  629.3839 882.4783 ## 2  2 2019-03-24 12:55:23 1056.1692 656.5207 ## 3  3 2019-03-24 12:55:23  508.0092 375.2451 ## 4  4 2019-03-24 12:55:23 1277.6466 373.7491 ## 5  5 2019-03-24 12:55:23 1379.2844 343.0853 ## 6  6 2019-03-24 12:55:23 1137.1378 174.5110 vid_tbl <- track(x = raw$x, y = raw$y, t = raw$frame, id = raw$track,                   origin = \"2019-03-24 12:55:23\", period = period(\"1 second\") / 30,                   tz = \"America/New_York\", table = \"tbl\") print(vid_tbl) ## Track table [21982 observations] ## Number of tracks:  83  ## Dimensions:  2D  ## Geographic:  FALSE  ## Table class:  tibble ## # A tibble: 21,982 × 4 ##    id    t                       x     y ##    <chr> <dttm>              <dbl> <dbl> ##  1 1     2019-03-24 12:55:23  629.  882. ##  2 2     2019-03-24 12:55:23 1056.  657. ##  3 3     2019-03-24 12:55:23  508.  375. ##  4 4     2019-03-24 12:55:23 1278.  374. ##  5 5     2019-03-24 12:55:23 1379.  343. ##  6 6     2019-03-24 12:55:23 1137.  175. ##  7 7     2019-03-24 12:55:23  737.  116. ##  8 8     2019-03-24 12:55:23  922.  103. ##  9 1     2019-03-24 12:55:23  629.  882. ## 10 2     2019-03-24 12:55:23 1056.  656. ## # … with 21,972 more rows vid_dt <- track(x = raw$x, y = raw$y, t = raw$frame, id = raw$track,                  origin = \"2019-03-24 12:55:23\", period = period(\"1 second\") / 30,                  tz = \"America/New_York\", table = \"dt\") vid_dt ## Track table [21982 observations] ## Number of tracks:  83  ## Dimensions:  2D  ## Geographic:  FALSE  ## Table class:  data table ##        id                   t         x        y ##     1:  1 2019-03-24 12:55:23  629.3839 882.4783 ##     2:  2 2019-03-24 12:55:23 1056.1692 656.5207 ##     3:  3 2019-03-24 12:55:23  508.0092 375.2451 ##     4:  4 2019-03-24 12:55:23 1277.6466 373.7491 ##     5:  5 2019-03-24 12:55:23 1379.2844 343.0853 ##    ---                                           ## 21978: 82 2019-03-24 12:56:56  580.7614 587.2513 ## 21979: 34 2019-03-24 12:56:56  493.5477 529.5454 ## 21980: 47 2019-03-24 12:56:56  498.8001 432.5990 ## 21981: 58 2019-03-24 12:56:56  562.6123 266.9754 ## 21982: 67 2019-03-24 12:56:56 1046.3904 146.4723"},{"path":"https://swarm-lab.github.io/trackdf/articles/z2_build.html","id":"using-gps-tracker-data","dir":"Articles","previous_headings":"","what":"2.2 - Using GPS tracker data","title":"2 - Building a track table","text":"","code":"if (requireNamespace(\"readr\", quietly = TRUE) & requireNamespace(\"dplyr\", quietly = TRUE)) {   raw <- read_csv(system.file(\"extdata/gps/01.csv\", package = \"trackdf\")) %>%     na.omit() } else {   raw <- read.csv(system.file(\"extdata/gps/01.csv\", package = \"trackdf\"))   raw <- raw[complete.cases(raw), ] }  raw ## # A tibble: 3,596 × 4 ##    date       time       lon   lat ##    <date>     <time>   <dbl> <dbl> ##  1 2015-09-10 07:00:00  15.8 -22.4 ##  2 2015-09-10 07:00:01  15.8 -22.4 ##  3 2015-09-10 07:00:04  15.8 -22.4 ##  4 2015-09-10 07:00:05  15.8 -22.4 ##  5 2015-09-10 07:00:08  15.8 -22.4 ##  6 2015-09-10 07:00:09  15.8 -22.4 ##  7 2015-09-10 07:00:09  15.8 -22.4 ##  8 2015-09-10 07:00:10  15.8 -22.4 ##  9 2015-09-10 07:00:11  15.8 -22.4 ## 10 2015-09-10 07:00:12  15.8 -22.4 ## # … with 3,586 more rows gps_df <- track(x = raw$lon, y = raw$lat, t = paste(raw$date, raw$time), id = 1,                   proj = \"+proj=longlat\", tz = \"Africa/Windhoek\", table = \"df\") ## Warning: 1 failed to parse. head(gps_df) ## Track table [6 observations] ## Number of tracks:  1  ## Dimensions:  2D  ## Geographic:  TRUE  ## Projection:  +proj=longlat  ## Table class:  data frame ##   id                   t        x         y ## 1  1 2015-09-10 07:00:00 15.76468 -22.37957 ## 2  1 2015-09-10 07:00:01 15.76468 -22.37957 ## 3  1 2015-09-10 07:00:04 15.76468 -22.37958 ## 4  1 2015-09-10 07:00:05 15.76468 -22.37958 ## 5  1 2015-09-10 07:00:08 15.76467 -22.37959 ## 6  1 2015-09-10 07:00:09 15.76467 -22.37959 gps_tbl <- track(x = raw$lon, y = raw$lat, t = paste(raw$date, raw$time), id = 1,                    proj = \"+proj=longlat\", tz = \"Africa/Windhoek\", table = \"tbl\") ## Warning: 1 failed to parse. gps_tbl ## Track table [3596 observations] ## Number of tracks:  1  ## Dimensions:  2D  ## Geographic:  TRUE  ## Projection:  +proj=longlat  ## Table class:  tibble ## # A tibble: 3,596 × 4 ##    id    t                       x     y ##    <chr> <dttm>              <dbl> <dbl> ##  1 1     2015-09-10 07:00:00  15.8 -22.4 ##  2 1     2015-09-10 07:00:01  15.8 -22.4 ##  3 1     2015-09-10 07:00:04  15.8 -22.4 ##  4 1     2015-09-10 07:00:05  15.8 -22.4 ##  5 1     2015-09-10 07:00:08  15.8 -22.4 ##  6 1     2015-09-10 07:00:09  15.8 -22.4 ##  7 1     2015-09-10 07:00:09  15.8 -22.4 ##  8 1     2015-09-10 07:00:10  15.8 -22.4 ##  9 1     2015-09-10 07:00:11  15.8 -22.4 ## 10 1     2015-09-10 07:00:12  15.8 -22.4 ## # … with 3,586 more rows gps_dt <- track(x = raw$lon, y = raw$lat, t = paste(raw$date, raw$time), id = 1,                   proj = \"+proj=longlat\", tz = \"Africa/Windhoek\", table = \"dt\") ## Warning: 1 failed to parse. gps_dt ## Track table [3596 observations] ## Number of tracks:  1  ## Dimensions:  2D  ## Geographic:  TRUE  ## Projection:  +proj=longlat  ## Table class:  data table ##       id                   t        x         y ##    1:  1 2015-09-10 07:00:00 15.76468 -22.37957 ##    2:  1 2015-09-10 07:00:01 15.76468 -22.37957 ##    3:  1 2015-09-10 07:00:04 15.76468 -22.37958 ##    4:  1 2015-09-10 07:00:05 15.76468 -22.37958 ##    5:  1 2015-09-10 07:00:08 15.76467 -22.37959 ##   ---                                           ## 3592:  1 2015-09-10 07:59:55 15.76231 -22.37752 ## 3593:  1 2015-09-10 07:59:56 15.76230 -22.37752 ## 3594:  1 2015-09-10 07:59:57 15.76229 -22.37752 ## 3595:  1 2015-09-10 07:59:58 15.76229 -22.37751 ## 3596:  1 2015-09-10 07:59:59 15.76228 -22.37751"},{"path":"https://swarm-lab.github.io/trackdf/articles/z3_manipulate.html","id":"creating-track-tables","dir":"Articles","previous_headings":"","what":"3.1 - Creating track tables","title":"3 - Manipulating a track table","text":"hood, track table just simple data frame class data.frame, tibble data.table extra bells whistles. means can manipulate track table way data frame three classes. create track table based data.frame, : create track table based tibble, : create track table based data.table, :","code":"t_df <- track(x = tracks$x, y = tracks$y, t = tracks$t, id = tracks$id,   proj = \"+proj=longlat\", tz = \"Africa/Windhoek\", table = \"df\") head(t_df) ## Track table [6 observations] ## Number of tracks:  1  ## Dimensions:  2D  ## Geographic:  TRUE  ## Projection:  +proj=longlat  ## Table class:  data frame ##   id                   t        x         y ## 1  1 2015-09-10 07:00:00 15.76468 -22.37957 ## 2  1 2015-09-10 07:00:01 15.76468 -22.37957 ## 3  1 2015-09-10 07:00:04 15.76468 -22.37958 ## 4  1 2015-09-10 07:00:05 15.76468 -22.37958 ## 5  1 2015-09-10 07:00:08 15.76467 -22.37959 ## 6  1 2015-09-10 07:00:09 15.76467 -22.37959 t_tbl <- track(x = tracks$x, y = tracks$y, t = tracks$t, id = tracks$id,   proj = \"+proj=longlat\", tz = \"Africa/Windhoek\", table = \"tbl\") t_tbl ## Track table [7194 observations] ## Number of tracks:  2  ## Dimensions:  2D  ## Geographic:  TRUE  ## Projection:  +proj=longlat  ## Table class:  tibble ## # A tibble: 7,194 × 4 ##    id    t                       x     y ##    <chr> <dttm>              <dbl> <dbl> ##  1 1     2015-09-10 07:00:00  15.8 -22.4 ##  2 1     2015-09-10 07:00:01  15.8 -22.4 ##  3 1     2015-09-10 07:00:04  15.8 -22.4 ##  4 1     2015-09-10 07:00:05  15.8 -22.4 ##  5 1     2015-09-10 07:00:08  15.8 -22.4 ##  6 1     2015-09-10 07:00:09  15.8 -22.4 ##  7 1     2015-09-10 07:00:10  15.8 -22.4 ##  8 1     2015-09-10 07:00:11  15.8 -22.4 ##  9 1     2015-09-10 07:00:12  15.8 -22.4 ## 10 1     2015-09-10 07:00:13  15.8 -22.4 ## # … with 7,184 more rows t_dt <- track(x = tracks$x, y = tracks$y, t = tracks$t, id = tracks$id,   proj = \"+proj=longlat\", tz = \"Africa/Windhoek\", table = \"dt\") t_dt ## Track table [7194 observations] ## Number of tracks:  2  ## Dimensions:  2D  ## Geographic:  TRUE  ## Projection:  +proj=longlat  ## Table class:  data table ##       id                   t        x         y ##    1:  1 2015-09-10 07:00:00 15.76468 -22.37957 ##    2:  1 2015-09-10 07:00:01 15.76468 -22.37957 ##    3:  1 2015-09-10 07:00:04 15.76468 -22.37958 ##    4:  1 2015-09-10 07:00:05 15.76468 -22.37958 ##    5:  1 2015-09-10 07:00:08 15.76467 -22.37959 ##   ---                                           ## 7190:  2 2015-09-10 07:59:55 15.76246 -22.37763 ## 7191:  2 2015-09-10 07:59:56 15.76245 -22.37763 ## 7192:  2 2015-09-10 07:59:57 15.76244 -22.37762 ## 7193:  2 2015-09-10 07:59:58 15.76243 -22.37762 ## 7194:  2 2015-09-10 07:59:59 15.76243 -22.37761"},{"path":"https://swarm-lab.github.io/trackdf/articles/z3_manipulate.html","id":"basic-manipulations","dir":"Articles","previous_headings":"","what":"3.2 - Basic manipulations","title":"3 - Manipulating a track table","text":"can check whether object track table follows: can check whether track table contains geographic coordinates follows:","code":"is_track(t_df) ## [1] TRUE is_track(t_tbl) ## [1] TRUE is_track(t_dt) ## [1] TRUE is_geo(t_df) ## [1] TRUE is_geo(t_tbl) ## [1] TRUE is_geo(t_dt) ## [1] TRUE"},{"path":"https://swarm-lab.github.io/trackdf/articles/z3_manipulate.html","id":"accessing-data","dir":"Articles","previous_headings":"","what":"3.3 - Accessing data","title":"3 - Manipulating a track table","text":"can access different parts (rows, columns, elements) track table follows: Note results varies depending underlying data frame class. combining commands <- operator, can easily modify content track table. example:","code":"head(t_df$id) ## [1] \"1\" \"1\" \"1\" \"1\" \"1\" \"1\" head(t_tbl$id) ## [1] \"1\" \"1\" \"1\" \"1\" \"1\" \"1\" head(t_dt$id) ## [1] \"1\" \"1\" \"1\" \"1\" \"1\" \"1\" head(t_df[[\"t\"]]) ## [1] \"2015-09-10 07:00:00 CAT\" \"2015-09-10 07:00:01 CAT\" ## [3] \"2015-09-10 07:00:04 CAT\" \"2015-09-10 07:00:05 CAT\" ## [5] \"2015-09-10 07:00:08 CAT\" \"2015-09-10 07:00:09 CAT\" head(t_tbl[[\"t\"]]) ## [1] \"2015-09-10 07:00:00 CAT\" \"2015-09-10 07:00:01 CAT\" ## [3] \"2015-09-10 07:00:04 CAT\" \"2015-09-10 07:00:05 CAT\" ## [5] \"2015-09-10 07:00:08 CAT\" \"2015-09-10 07:00:09 CAT\" head(t_dt[[\"t\"]]) ## [1] \"2015-09-10 07:00:00 CAT\" \"2015-09-10 07:00:01 CAT\" ## [3] \"2015-09-10 07:00:04 CAT\" \"2015-09-10 07:00:05 CAT\" ## [5] \"2015-09-10 07:00:08 CAT\" \"2015-09-10 07:00:09 CAT\" head(t_df[1]) ##   id ## 1  1 ## 2  1 ## 3  1 ## 4  1 ## 5  1 ## 6  1 t_tbl[1] ## # A tibble: 7,194 × 1 ##    id    ##    <chr> ##  1 1     ##  2 1     ##  3 1     ##  4 1     ##  5 1     ##  6 1     ##  7 1     ##  8 1     ##  9 1     ## 10 1     ## # … with 7,184 more rows t_dt[1] ## Track table [1 observations] ## Number of tracks:  1  ## Dimensions:  2D  ## Geographic:  TRUE  ## Projection:  +proj=longlat  ## Table class:  data table ##    id                   t        x         y ## 1:  1 2015-09-10 07:00:00 15.76468 -22.37957 t_df[1, ] ## Track table [1 observations] ## Number of tracks:  1  ## Dimensions:  2D  ## Geographic:  TRUE  ## Projection:  +proj=longlat  ## Table class:  data frame ##   id                   t        x         y ## 1  1 2015-09-10 07:00:00 15.76468 -22.37957 t_tbl[1, ] ## Track table [1 observations] ## Number of tracks:  1  ## Dimensions:  2D  ## Geographic:  TRUE  ## Projection:  +proj=longlat  ## Table class:  tibble ## # A tibble: 1 × 4 ##   id    t                       x     y ##   <chr> <dttm>              <dbl> <dbl> ## 1 1     2015-09-10 07:00:00  15.8 -22.4 t_dt[1, ] ## Track table [1 observations] ## Number of tracks:  1  ## Dimensions:  2D  ## Geographic:  TRUE  ## Projection:  +proj=longlat  ## Table class:  data table ##    id                   t        x         y ## 1:  1 2015-09-10 07:00:00 15.76468 -22.37957 t_df[1, 1] ## [1] \"1\" t_tbl[1, 1] ## # A tibble: 1 × 1 ##   id    ##   <chr> ## 1 1 t_dt[1, 1] ##    id ## 1:  1 t_df$id[t_df$id == \"1\"] <- \"0\" head(t_df) ## Track table [6 observations] ## Number of tracks:  1  ## Dimensions:  2D  ## Geographic:  TRUE  ## Projection:  +proj=longlat  ## Table class:  data frame ##   id                   t        x         y ## 1  0 2015-09-10 07:00:00 15.76468 -22.37957 ## 2  0 2015-09-10 07:00:01 15.76468 -22.37957 ## 3  0 2015-09-10 07:00:04 15.76468 -22.37958 ## 4  0 2015-09-10 07:00:05 15.76468 -22.37958 ## 5  0 2015-09-10 07:00:08 15.76467 -22.37959 ## 6  0 2015-09-10 07:00:09 15.76467 -22.37959 t_df[t_df[, 1] == \"0\", 1] <- \"1\" head(t_df) ## Track table [6 observations] ## Number of tracks:  1  ## Dimensions:  2D  ## Geographic:  TRUE  ## Projection:  +proj=longlat  ## Table class:  data frame ##   id                   t        x         y ## 1  1 2015-09-10 07:00:00 15.76468 -22.37957 ## 2  1 2015-09-10 07:00:01 15.76468 -22.37957 ## 3  1 2015-09-10 07:00:04 15.76468 -22.37958 ## 4  1 2015-09-10 07:00:05 15.76468 -22.37958 ## 5  1 2015-09-10 07:00:08 15.76467 -22.37959 ## 6  1 2015-09-10 07:00:09 15.76467 -22.37959"},{"path":"https://swarm-lab.github.io/trackdf/articles/z3_manipulate.html","id":"accessing-and-modifying-the-coordinates-projection","dir":"Articles","previous_headings":"","what":"3.4 - Accessing and modifying the coordinates’ projection","title":"3 - Manipulating a track table","text":"can access projection track table follows. can modify place projection track table follows. automatically convert coordinates appropriate projection system. prefer modify original object, can create new one new projection follows.","code":"projection(t_df) ## Coordinate Reference System: ##   User input: +proj=longlat  ##   wkt: ## GEOGCRS[\"unknown\", ##     DATUM[\"World Geodetic System 1984\", ##         ELLIPSOID[\"WGS 84\",6378137,298.257223563, ##             LENGTHUNIT[\"metre\",1]], ##         ID[\"EPSG\",6326]], ##     PRIMEM[\"Greenwich\",0, ##         ANGLEUNIT[\"degree\",0.0174532925199433], ##         ID[\"EPSG\",8901]], ##     CS[ellipsoidal,2], ##         AXIS[\"longitude\",east, ##             ORDER[1], ##             ANGLEUNIT[\"degree\",0.0174532925199433, ##                 ID[\"EPSG\",9122]]], ##         AXIS[\"latitude\",north, ##             ORDER[2], ##             ANGLEUNIT[\"degree\",0.0174532925199433, ##                 ID[\"EPSG\",9122]]]] projection(t_df) <- \"+proj=somerc +lat_0=46.9524056 +lon_0=7.43958333 +ellps=bessel +x_0=2600000 +y_0=1200000 +towgs84=674.374,15.056,405.346 +units=m +k_0=1 +no_defs\" head(t_df) ## Track table [6 observations] ## Number of tracks:  1  ## Dimensions:  2D  ## Geographic:  TRUE  ## Projection:  +proj=somerc +lat_0=46.9524056 +lon_0=7.43958333 +ellps=bessel +x_0=2600000 +y_0=1200000 +towgs84=674.374,15.056,405.346 +units=m +k_0=1 +no_defs  ## Table class:  data frame ##   id                   t       x        y ## 1  1 2015-09-10 07:00:00 4927487 -9217299 ## 2  1 2015-09-10 07:00:01 4927487 -9217299 ## 3  1 2015-09-10 07:00:04 4927487 -9217301 ## 4  1 2015-09-10 07:00:05 4927487 -9217302 ## 5  1 2015-09-10 07:00:08 4927486 -9217304 ## 6  1 2015-09-10 07:00:09 4927485 -9217305 projection(t_df) <- \"+proj=longlat\"  head(t_df) ## Track table [6 observations] ## Number of tracks:  1  ## Dimensions:  2D  ## Geographic:  TRUE  ## Projection:  +proj=longlat  ## Table class:  data frame ##   id                   t        x         y ## 1  1 2015-09-10 07:00:00 15.76468 -22.37957 ## 2  1 2015-09-10 07:00:01 15.76468 -22.37957 ## 3  1 2015-09-10 07:00:04 15.76468 -22.37958 ## 4  1 2015-09-10 07:00:05 15.76468 -22.37958 ## 5  1 2015-09-10 07:00:08 15.76467 -22.37959 ## 6  1 2015-09-10 07:00:09 15.76467 -22.37959 t_df_new_proj <- project(t_df, \"+proj=somerc +lat_0=46.9524056 +lon_0=7.43958333 +ellps=bessel +x_0=2600000 +y_0=1200000 +towgs84=674.374,15.056,405.346 +units=m +k_0=1 +no_defs\")  head(t_df_new_proj) ## Track table [6 observations] ## Number of tracks:  1  ## Dimensions:  2D  ## Geographic:  TRUE  ## Projection:  +proj=somerc +lat_0=46.9524056 +lon_0=7.43958333 +ellps=bessel +x_0=2600000 +y_0=1200000 +towgs84=674.374,15.056,405.346 +units=m +k_0=1 +no_defs  ## Table class:  data frame ##   id                   t       x        y ## 1  1 2015-09-10 07:00:00 4927487 -9217299 ## 2  1 2015-09-10 07:00:01 4927487 -9217299 ## 3  1 2015-09-10 07:00:04 4927487 -9217301 ## 4  1 2015-09-10 07:00:05 4927487 -9217302 ## 5  1 2015-09-10 07:00:08 4927486 -9217304 ## 6  1 2015-09-10 07:00:09 4927485 -9217305"},{"path":"https://swarm-lab.github.io/trackdf/articles/z3_manipulate.html","id":"tidyverse","dir":"Articles","previous_headings":"","what":"3.5 - Tidyverse","title":"3 - Manipulating a track table","text":"Track tables compatible functions tidyverse (one notable exception, see ). instance, can use dplyr verbs filter, mutate, group, etc., track table, way tibble data.frame. bind_rows notable exception rule . Indeed, combining two data frames, attributes first data frame passed bind_rows retained output data frame. result, combining bind_rows two track tables different projections ignore projection second track table assume first one. avoid issue, trackdf provides special version bind_rows called bind_tracks checks first dimensions, geographic status, projections input track tables compatible . data.frame based track tables: tibble based track tables: data.table based track tables:","code":"if (requireNamespace(\"dplyr\", quietly = TRUE)) {   library(dplyr)      t_df %>%     filter(., t < as.POSIXct(\"2015-09-10 07:01:00\", tz = \"Africa/Windhoek\")) %>%     head(.) } ##  ## Attaching package: 'dplyr' ## The following objects are masked from 'package:stats': ##  ##     filter, lag ## The following objects are masked from 'package:base': ##  ##     intersect, setdiff, setequal, union ## Track table [6 observations] ## Number of tracks:  1  ## Dimensions:  2D  ## Geographic:  TRUE  ## Projection:  +proj=longlat  ## Table class:  data frame ##   id                   t        x         y ## 1  1 2015-09-10 07:00:00 15.76468 -22.37957 ## 2  1 2015-09-10 07:00:01 15.76468 -22.37957 ## 3  1 2015-09-10 07:00:04 15.76468 -22.37958 ## 4  1 2015-09-10 07:00:05 15.76468 -22.37958 ## 5  1 2015-09-10 07:00:08 15.76467 -22.37959 ## 6  1 2015-09-10 07:00:09 15.76467 -22.37959 if (requireNamespace(\"dplyr\", quietly = TRUE)) {   library(dplyr)      t_df %>%     group_by(., id) %>%     summarize(., x = mean(x),               y = mean(y)) } ##   id        x         y ## 1  1 15.76476 -22.37877 ## 2  2 15.76485 -22.37881 if (requireNamespace(\"dplyr\", quietly = TRUE)) {   t_df1 <- dplyr::filter(t_df, id == \"1\")   t_df2 <- dplyr::filter(t_df, id == \"2\") } else {   t_df1 <- t_df[t_df$id == \"1\", ]   t_df2 <- t_df[t_df$id == \"2\", ] }  head(bind_tracks(t_df1, t_df2)) if (requireNamespace(\"dplyr\", quietly = TRUE)) {   t_tbl1 <- dplyr::filter(t_tbl, id == \"1\")   t_tbl2 <- dplyr::filter(t_tbl, id == \"2\") } else {   t_tbl1 <- t_tbl[t_tbl$id == \"1\", ]   t_tbl2 <- t_tbl[t_tbl$id == \"2\", ] }  bind_tracks(t_tbl1, t_tbl2) if (requireNamespace(\"dplyr\", quietly = TRUE)) {   t_dt1 <- dplyr::filter(t_dt, id == \"1\")   t_dt2 <- dplyr::filter(t_dt, id == \"2\") } else {   t_dt1 <- t_dt[t_dt$id == \"1\", ]   t_dt2 <- t_dt[t_dt$id == \"2\", ] }  bind_tracks(t_dt1, t_dt2)"},{"path":"https://swarm-lab.github.io/trackdf/articles/z3_manipulate.html","id":"plotting","dir":"Articles","previous_headings":"","what":"3.4 - Plotting","title":"3 - Manipulating a track table","text":"can use plotting method accepting data.frame, tibble data.table represent data track table. base R:  [ggplot2]{https://ggplot2.tidyverse.org/}","code":"plot(y ~ x, data = t_dt[t_dt$id == \"1\"], type = \"l\", col = \"red\",       xlim = range(t_dt$x), lwd = 2, asp = 1) lines(y ~ x , data = t_dt[t_dt$id == \"2\"], col = \"blue\",  lwd = 2) if (requireNamespace(\"ggplot2\", quietly = TRUE)) {   ggplot2::ggplot(data = t_dt) +     ggplot2::aes(x = x, y = y, color = id) +      ggplot2::geom_path() +     ggplot2::coord_map() }"},{"path":"https://swarm-lab.github.io/trackdf/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Simon Garnier. Author, maintainer.","code":""},{"path":"https://swarm-lab.github.io/trackdf/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Garnier S (2023). trackdf: Data Frame Class Tracking Data. https://swarm-lab.github.io/trackdf/, https://github.com/swarm-lab/trackdf.","code":"@Manual{,   title = {trackdf: Data Frame Class for Tracking Data},   author = {Simon Garnier},   year = {2023},   note = {https://swarm-lab.github.io/trackdf/, https://github.com/swarm-lab/trackdf}, }"},{"path":[]},{"path":"https://swarm-lab.github.io/trackdf/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Data Frame Class for Tracking Data","text":"trackdf R package aims standardize accelerate processing data describing animal trajectories captured lab (e.g., video tracking) field (e.g., GPS trackers). trackdf provides data frame-like class based popular tibble class compatible base R functions tidyverse (e.g., dplyr, ggplot2). trackdf work progress. Functions yet stable state likely change package gets developed.","code":""},{"path":"https://swarm-lab.github.io/trackdf/index.html","id":"quick-start-guides","dir":"","previous_headings":"","what":"Quick start guides","title":"Data Frame Class for Tracking Data","text":"1 - Installing trackdf 2 - Building track table 3 - Manipulating track table","code":""},{"path":"https://swarm-lab.github.io/trackdf/index.html","id":"faq","dir":"","previous_headings":"","what":"FAQ","title":"Data Frame Class for Tracking Data","text":"can help? trackdf open-source project, meaning can freely modify code implement new functionalities. coding skills, welcome contribute new code code improvement submitting pull requests GitHub repository project : https://github.com/swarm-lab/trackdf. best review integrate quickly. feel like contributing code, can also help submitting bug reports feature requests using issue tracker GitHub repository project : https://github.com/swarm-lab/trackdf/issues. extremely helpful catch correct errors code, guide development trackdf integrating functionalities requested community.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/bind_tracks.html","id":null,"dir":"Reference","previous_headings":"","what":"Bind Multiple Track Tables by Row — bind_tracks","title":"Bind Multiple Track Tables by Row — bind_tracks","text":"bind_tracks uses data.table::rbindlist  combine track tables rows, makes sure bind together  two tables different projections, projection attribute  inherited resulting track table, track tables based  different table classes coerced table class.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/bind_tracks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bind Multiple Track Tables by Row — bind_tracks","text":"","code":"bind_tracks(...)"},{"path":"https://swarm-lab.github.io/trackdf/reference/bind_tracks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bind Multiple Track Tables by Row — bind_tracks","text":"... Track tables combine. argument can either track table list track tables. track tables must projection.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/bind_tracks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bind Multiple Track Tables by Row — bind_tracks","text":"track table.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/bind_tracks.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bind Multiple Track Tables by Row — bind_tracks","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/bind_tracks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bind Multiple Track Tables by Row — bind_tracks","text":"","code":"data(short_tracks)  bind_tracks(short_tracks, short_tracks) #> Track table [240 observations] #> Number of tracks:  2  #> Dimensions:  2D  #> Geographic:  TRUE  #> Projection:  +proj=longlat  #> Table class:  data frame #>     id                   t        x         y #> 1    1 2015-09-10 07:01:00 15.76468 -22.37961 #> 2    1 2015-09-10 07:01:01 15.76469 -22.37960 #> 3    1 2015-09-10 07:01:02 15.76469 -22.37960 #> 4    1 2015-09-10 07:01:03 15.76469 -22.37960 #> 5    1 2015-09-10 07:01:04 15.76470 -22.37960 #> 6    1 2015-09-10 07:01:05 15.76469 -22.37960 #> 7    1 2015-09-10 07:01:06 15.76469 -22.37960 #> 8    1 2015-09-10 07:01:07 15.76469 -22.37959 #> 9    1 2015-09-10 07:01:08 15.76469 -22.37959 #> 10   1 2015-09-10 07:01:09 15.76469 -22.37959 #> 11   1 2015-09-10 07:01:10 15.76469 -22.37959 #> 12   1 2015-09-10 07:01:11 15.76469 -22.37960 #> 13   1 2015-09-10 07:01:12 15.76469 -22.37960 #> 14   1 2015-09-10 07:01:13 15.76469 -22.37960 #> 15   1 2015-09-10 07:01:14 15.76469 -22.37960 #> 16   1 2015-09-10 07:01:15 15.76468 -22.37960 #> 17   1 2015-09-10 07:01:16 15.76468 -22.37960 #> 18   1 2015-09-10 07:01:17 15.76468 -22.37960 #> 19   1 2015-09-10 07:01:18 15.76468 -22.37960 #> 20   1 2015-09-10 07:01:19 15.76468 -22.37960 #> 21   1 2015-09-10 07:01:20 15.76468 -22.37960 #> 22   1 2015-09-10 07:01:21 15.76468 -22.37960 #> 23   1 2015-09-10 07:01:22 15.76468 -22.37960 #> 24   1 2015-09-10 07:01:23 15.76468 -22.37960 #> 25   1 2015-09-10 07:01:24 15.76468 -22.37960 #> 26   1 2015-09-10 07:01:25 15.76468 -22.37960 #> 27   1 2015-09-10 07:01:26 15.76468 -22.37960 #> 28   1 2015-09-10 07:01:27 15.76468 -22.37960 #> 29   1 2015-09-10 07:01:28 15.76468 -22.37960 #> 30   1 2015-09-10 07:01:29 15.76468 -22.37960 #> 31   1 2015-09-10 07:01:30 15.76468 -22.37960 #> 32   1 2015-09-10 07:01:31 15.76468 -22.37960 #> 33   1 2015-09-10 07:01:32 15.76469 -22.37960 #> 34   1 2015-09-10 07:01:33 15.76469 -22.37960 #> 35   1 2015-09-10 07:01:34 15.76469 -22.37960 #> 36   1 2015-09-10 07:01:35 15.76469 -22.37960 #> 37   1 2015-09-10 07:01:36 15.76469 -22.37960 #> 38   1 2015-09-10 07:01:37 15.76469 -22.37960 #> 39   1 2015-09-10 07:01:38 15.76469 -22.37960 #> 40   1 2015-09-10 07:01:39 15.76469 -22.37960 #> 41   1 2015-09-10 07:01:40 15.76469 -22.37960 #> 42   1 2015-09-10 07:01:41 15.76469 -22.37960 #> 43   1 2015-09-10 07:01:42 15.76469 -22.37960 #> 44   1 2015-09-10 07:01:43 15.76469 -22.37960 #> 45   1 2015-09-10 07:01:44 15.76469 -22.37960 #> 46   1 2015-09-10 07:01:45 15.76469 -22.37960 #> 47   1 2015-09-10 07:01:46 15.76469 -22.37960 #> 48   1 2015-09-10 07:01:47 15.76469 -22.37960 #> 49   1 2015-09-10 07:01:48 15.76469 -22.37960 #> 50   1 2015-09-10 07:01:49 15.76469 -22.37959 #> 51   1 2015-09-10 07:01:50 15.76469 -22.37959 #> 52   1 2015-09-10 07:01:51 15.76470 -22.37959 #> 53   1 2015-09-10 07:01:52 15.76470 -22.37959 #> 54   1 2015-09-10 07:01:53 15.76470 -22.37959 #> 55   1 2015-09-10 07:01:54 15.76470 -22.37960 #> 56   1 2015-09-10 07:01:55 15.76470 -22.37960 #> 57   1 2015-09-10 07:01:56 15.76471 -22.37960 #> 58   1 2015-09-10 07:01:57 15.76471 -22.37959 #> 59   1 2015-09-10 07:01:58 15.76471 -22.37959 #> 60   1 2015-09-10 07:01:59 15.76471 -22.37959 #> 61   2 2015-09-10 07:01:00 15.76459 -22.37971 #> 62   2 2015-09-10 07:01:01 15.76459 -22.37971 #> 63   2 2015-09-10 07:01:02 15.76459 -22.37971 #> 64   2 2015-09-10 07:01:03 15.76459 -22.37971 #> 65   2 2015-09-10 07:01:04 15.76459 -22.37971 #> 66   2 2015-09-10 07:01:05 15.76459 -22.37971 #> 67   2 2015-09-10 07:01:06 15.76459 -22.37971 #> 68   2 2015-09-10 07:01:07 15.76459 -22.37971 #> 69   2 2015-09-10 07:01:08 15.76459 -22.37971 #> 70   2 2015-09-10 07:01:09 15.76459 -22.37971 #> 71   2 2015-09-10 07:01:10 15.76459 -22.37971 #> 72   2 2015-09-10 07:01:11 15.76459 -22.37971 #> 73   2 2015-09-10 07:01:12 15.76459 -22.37971 #> 74   2 2015-09-10 07:01:13 15.76459 -22.37971 #> 75   2 2015-09-10 07:01:14 15.76459 -22.37971 #> 76   2 2015-09-10 07:01:15 15.76459 -22.37971 #> 77   2 2015-09-10 07:01:16 15.76459 -22.37971 #> 78   2 2015-09-10 07:01:17 15.76459 -22.37971 #> 79   2 2015-09-10 07:01:18 15.76459 -22.37971 #> 80   2 2015-09-10 07:01:19 15.76459 -22.37971 #> 81   2 2015-09-10 07:01:20 15.76459 -22.37971 #> 82   2 2015-09-10 07:01:21 15.76459 -22.37971 #> 83   2 2015-09-10 07:01:22 15.76459 -22.37971 #> 84   2 2015-09-10 07:01:23 15.76459 -22.37971 #> 85   2 2015-09-10 07:01:24 15.76459 -22.37971 #> 86   2 2015-09-10 07:01:25 15.76458 -22.37971 #> 87   2 2015-09-10 07:01:26 15.76459 -22.37971 #> 88   2 2015-09-10 07:01:27 15.76459 -22.37971 #> 89   2 2015-09-10 07:01:28 15.76459 -22.37971 #> 90   2 2015-09-10 07:01:29 15.76458 -22.37971 #> 91   2 2015-09-10 07:01:30 15.76458 -22.37971 #> 92   2 2015-09-10 07:01:31 15.76457 -22.37971 #> 93   2 2015-09-10 07:01:32 15.76456 -22.37971 #> 94   2 2015-09-10 07:01:33 15.76455 -22.37972 #> 95   2 2015-09-10 07:01:34 15.76455 -22.37972 #> 96   2 2015-09-10 07:01:35 15.76455 -22.37973 #> 97   2 2015-09-10 07:01:36 15.76455 -22.37973 #> 98   2 2015-09-10 07:01:37 15.76455 -22.37974 #> 99   2 2015-09-10 07:01:38 15.76455 -22.37974 #> 100  2 2015-09-10 07:01:39 15.76455 -22.37975 #> 101  2 2015-09-10 07:01:40 15.76455 -22.37975 #> 102  2 2015-09-10 07:01:41 15.76454 -22.37976 #> 103  2 2015-09-10 07:01:42 15.76455 -22.37976 #> 104  2 2015-09-10 07:01:43 15.76455 -22.37976 #> 105  2 2015-09-10 07:01:44 15.76455 -22.37977 #> 106  2 2015-09-10 07:01:45 15.76456 -22.37977 #> 107  2 2015-09-10 07:01:46 15.76457 -22.37978 #> 108  2 2015-09-10 07:01:47 15.76458 -22.37978 #> 109  2 2015-09-10 07:01:48 15.76459 -22.37979 #> 110  2 2015-09-10 07:01:49 15.76459 -22.37979 #> 111  2 2015-09-10 07:01:50 15.76460 -22.37980 #> 112  2 2015-09-10 07:01:51 15.76461 -22.37980 #> 113  2 2015-09-10 07:01:52 15.76461 -22.37981 #> 114  2 2015-09-10 07:01:53 15.76461 -22.37981 #> 115  2 2015-09-10 07:01:54 15.76462 -22.37981 #> 116  2 2015-09-10 07:01:55 15.76463 -22.37982 #> 117  2 2015-09-10 07:01:56 15.76463 -22.37982 #> 118  2 2015-09-10 07:01:57 15.76464 -22.37982 #> 119  2 2015-09-10 07:01:58 15.76465 -22.37982 #> 120  2 2015-09-10 07:01:59 15.76466 -22.37982 #> 121  1 2015-09-10 07:01:00 15.76468 -22.37961 #> 122  1 2015-09-10 07:01:01 15.76469 -22.37960 #> 123  1 2015-09-10 07:01:02 15.76469 -22.37960 #> 124  1 2015-09-10 07:01:03 15.76469 -22.37960 #> 125  1 2015-09-10 07:01:04 15.76470 -22.37960 #> 126  1 2015-09-10 07:01:05 15.76469 -22.37960 #> 127  1 2015-09-10 07:01:06 15.76469 -22.37960 #> 128  1 2015-09-10 07:01:07 15.76469 -22.37959 #> 129  1 2015-09-10 07:01:08 15.76469 -22.37959 #> 130  1 2015-09-10 07:01:09 15.76469 -22.37959 #> 131  1 2015-09-10 07:01:10 15.76469 -22.37959 #> 132  1 2015-09-10 07:01:11 15.76469 -22.37960 #> 133  1 2015-09-10 07:01:12 15.76469 -22.37960 #> 134  1 2015-09-10 07:01:13 15.76469 -22.37960 #> 135  1 2015-09-10 07:01:14 15.76469 -22.37960 #> 136  1 2015-09-10 07:01:15 15.76468 -22.37960 #> 137  1 2015-09-10 07:01:16 15.76468 -22.37960 #> 138  1 2015-09-10 07:01:17 15.76468 -22.37960 #> 139  1 2015-09-10 07:01:18 15.76468 -22.37960 #> 140  1 2015-09-10 07:01:19 15.76468 -22.37960 #> 141  1 2015-09-10 07:01:20 15.76468 -22.37960 #> 142  1 2015-09-10 07:01:21 15.76468 -22.37960 #> 143  1 2015-09-10 07:01:22 15.76468 -22.37960 #> 144  1 2015-09-10 07:01:23 15.76468 -22.37960 #> 145  1 2015-09-10 07:01:24 15.76468 -22.37960 #> 146  1 2015-09-10 07:01:25 15.76468 -22.37960 #> 147  1 2015-09-10 07:01:26 15.76468 -22.37960 #> 148  1 2015-09-10 07:01:27 15.76468 -22.37960 #> 149  1 2015-09-10 07:01:28 15.76468 -22.37960 #> 150  1 2015-09-10 07:01:29 15.76468 -22.37960 #> 151  1 2015-09-10 07:01:30 15.76468 -22.37960 #> 152  1 2015-09-10 07:01:31 15.76468 -22.37960 #> 153  1 2015-09-10 07:01:32 15.76469 -22.37960 #> 154  1 2015-09-10 07:01:33 15.76469 -22.37960 #> 155  1 2015-09-10 07:01:34 15.76469 -22.37960 #> 156  1 2015-09-10 07:01:35 15.76469 -22.37960 #> 157  1 2015-09-10 07:01:36 15.76469 -22.37960 #> 158  1 2015-09-10 07:01:37 15.76469 -22.37960 #> 159  1 2015-09-10 07:01:38 15.76469 -22.37960 #> 160  1 2015-09-10 07:01:39 15.76469 -22.37960 #> 161  1 2015-09-10 07:01:40 15.76469 -22.37960 #> 162  1 2015-09-10 07:01:41 15.76469 -22.37960 #> 163  1 2015-09-10 07:01:42 15.76469 -22.37960 #> 164  1 2015-09-10 07:01:43 15.76469 -22.37960 #> 165  1 2015-09-10 07:01:44 15.76469 -22.37960 #> 166  1 2015-09-10 07:01:45 15.76469 -22.37960 #> 167  1 2015-09-10 07:01:46 15.76469 -22.37960 #> 168  1 2015-09-10 07:01:47 15.76469 -22.37960 #> 169  1 2015-09-10 07:01:48 15.76469 -22.37960 #> 170  1 2015-09-10 07:01:49 15.76469 -22.37959 #> 171  1 2015-09-10 07:01:50 15.76469 -22.37959 #> 172  1 2015-09-10 07:01:51 15.76470 -22.37959 #> 173  1 2015-09-10 07:01:52 15.76470 -22.37959 #> 174  1 2015-09-10 07:01:53 15.76470 -22.37959 #> 175  1 2015-09-10 07:01:54 15.76470 -22.37960 #> 176  1 2015-09-10 07:01:55 15.76470 -22.37960 #> 177  1 2015-09-10 07:01:56 15.76471 -22.37960 #> 178  1 2015-09-10 07:01:57 15.76471 -22.37959 #> 179  1 2015-09-10 07:01:58 15.76471 -22.37959 #> 180  1 2015-09-10 07:01:59 15.76471 -22.37959 #> 181  2 2015-09-10 07:01:00 15.76459 -22.37971 #> 182  2 2015-09-10 07:01:01 15.76459 -22.37971 #> 183  2 2015-09-10 07:01:02 15.76459 -22.37971 #> 184  2 2015-09-10 07:01:03 15.76459 -22.37971 #> 185  2 2015-09-10 07:01:04 15.76459 -22.37971 #> 186  2 2015-09-10 07:01:05 15.76459 -22.37971 #> 187  2 2015-09-10 07:01:06 15.76459 -22.37971 #> 188  2 2015-09-10 07:01:07 15.76459 -22.37971 #> 189  2 2015-09-10 07:01:08 15.76459 -22.37971 #> 190  2 2015-09-10 07:01:09 15.76459 -22.37971 #> 191  2 2015-09-10 07:01:10 15.76459 -22.37971 #> 192  2 2015-09-10 07:01:11 15.76459 -22.37971 #> 193  2 2015-09-10 07:01:12 15.76459 -22.37971 #> 194  2 2015-09-10 07:01:13 15.76459 -22.37971 #> 195  2 2015-09-10 07:01:14 15.76459 -22.37971 #> 196  2 2015-09-10 07:01:15 15.76459 -22.37971 #> 197  2 2015-09-10 07:01:16 15.76459 -22.37971 #> 198  2 2015-09-10 07:01:17 15.76459 -22.37971 #> 199  2 2015-09-10 07:01:18 15.76459 -22.37971 #> 200  2 2015-09-10 07:01:19 15.76459 -22.37971 #> 201  2 2015-09-10 07:01:20 15.76459 -22.37971 #> 202  2 2015-09-10 07:01:21 15.76459 -22.37971 #> 203  2 2015-09-10 07:01:22 15.76459 -22.37971 #> 204  2 2015-09-10 07:01:23 15.76459 -22.37971 #> 205  2 2015-09-10 07:01:24 15.76459 -22.37971 #> 206  2 2015-09-10 07:01:25 15.76458 -22.37971 #> 207  2 2015-09-10 07:01:26 15.76459 -22.37971 #> 208  2 2015-09-10 07:01:27 15.76459 -22.37971 #> 209  2 2015-09-10 07:01:28 15.76459 -22.37971 #> 210  2 2015-09-10 07:01:29 15.76458 -22.37971 #> 211  2 2015-09-10 07:01:30 15.76458 -22.37971 #> 212  2 2015-09-10 07:01:31 15.76457 -22.37971 #> 213  2 2015-09-10 07:01:32 15.76456 -22.37971 #> 214  2 2015-09-10 07:01:33 15.76455 -22.37972 #> 215  2 2015-09-10 07:01:34 15.76455 -22.37972 #> 216  2 2015-09-10 07:01:35 15.76455 -22.37973 #> 217  2 2015-09-10 07:01:36 15.76455 -22.37973 #> 218  2 2015-09-10 07:01:37 15.76455 -22.37974 #> 219  2 2015-09-10 07:01:38 15.76455 -22.37974 #> 220  2 2015-09-10 07:01:39 15.76455 -22.37975 #> 221  2 2015-09-10 07:01:40 15.76455 -22.37975 #> 222  2 2015-09-10 07:01:41 15.76454 -22.37976 #> 223  2 2015-09-10 07:01:42 15.76455 -22.37976 #> 224  2 2015-09-10 07:01:43 15.76455 -22.37976 #> 225  2 2015-09-10 07:01:44 15.76455 -22.37977 #> 226  2 2015-09-10 07:01:45 15.76456 -22.37977 #> 227  2 2015-09-10 07:01:46 15.76457 -22.37978 #> 228  2 2015-09-10 07:01:47 15.76458 -22.37978 #> 229  2 2015-09-10 07:01:48 15.76459 -22.37979 #> 230  2 2015-09-10 07:01:49 15.76459 -22.37979 #> 231  2 2015-09-10 07:01:50 15.76460 -22.37980 #> 232  2 2015-09-10 07:01:51 15.76461 -22.37980 #> 233  2 2015-09-10 07:01:52 15.76461 -22.37981 #> 234  2 2015-09-10 07:01:53 15.76461 -22.37981 #> 235  2 2015-09-10 07:01:54 15.76462 -22.37981 #> 236  2 2015-09-10 07:01:55 15.76463 -22.37982 #> 237  2 2015-09-10 07:01:56 15.76463 -22.37982 #> 238  2 2015-09-10 07:01:57 15.76464 -22.37982 #> 239  2 2015-09-10 07:01:58 15.76465 -22.37982 #> 240  2 2015-09-10 07:01:59 15.76466 -22.37982 bind_tracks(list(short_tracks, short_tracks)) #> Track table [240 observations] #> Number of tracks:  2  #> Dimensions:  2D  #> Geographic:  TRUE  #> Projection:  +proj=longlat  #> Table class:  data frame #>     id                   t        x         y #> 1    1 2015-09-10 07:01:00 15.76468 -22.37961 #> 2    1 2015-09-10 07:01:01 15.76469 -22.37960 #> 3    1 2015-09-10 07:01:02 15.76469 -22.37960 #> 4    1 2015-09-10 07:01:03 15.76469 -22.37960 #> 5    1 2015-09-10 07:01:04 15.76470 -22.37960 #> 6    1 2015-09-10 07:01:05 15.76469 -22.37960 #> 7    1 2015-09-10 07:01:06 15.76469 -22.37960 #> 8    1 2015-09-10 07:01:07 15.76469 -22.37959 #> 9    1 2015-09-10 07:01:08 15.76469 -22.37959 #> 10   1 2015-09-10 07:01:09 15.76469 -22.37959 #> 11   1 2015-09-10 07:01:10 15.76469 -22.37959 #> 12   1 2015-09-10 07:01:11 15.76469 -22.37960 #> 13   1 2015-09-10 07:01:12 15.76469 -22.37960 #> 14   1 2015-09-10 07:01:13 15.76469 -22.37960 #> 15   1 2015-09-10 07:01:14 15.76469 -22.37960 #> 16   1 2015-09-10 07:01:15 15.76468 -22.37960 #> 17   1 2015-09-10 07:01:16 15.76468 -22.37960 #> 18   1 2015-09-10 07:01:17 15.76468 -22.37960 #> 19   1 2015-09-10 07:01:18 15.76468 -22.37960 #> 20   1 2015-09-10 07:01:19 15.76468 -22.37960 #> 21   1 2015-09-10 07:01:20 15.76468 -22.37960 #> 22   1 2015-09-10 07:01:21 15.76468 -22.37960 #> 23   1 2015-09-10 07:01:22 15.76468 -22.37960 #> 24   1 2015-09-10 07:01:23 15.76468 -22.37960 #> 25   1 2015-09-10 07:01:24 15.76468 -22.37960 #> 26   1 2015-09-10 07:01:25 15.76468 -22.37960 #> 27   1 2015-09-10 07:01:26 15.76468 -22.37960 #> 28   1 2015-09-10 07:01:27 15.76468 -22.37960 #> 29   1 2015-09-10 07:01:28 15.76468 -22.37960 #> 30   1 2015-09-10 07:01:29 15.76468 -22.37960 #> 31   1 2015-09-10 07:01:30 15.76468 -22.37960 #> 32   1 2015-09-10 07:01:31 15.76468 -22.37960 #> 33   1 2015-09-10 07:01:32 15.76469 -22.37960 #> 34   1 2015-09-10 07:01:33 15.76469 -22.37960 #> 35   1 2015-09-10 07:01:34 15.76469 -22.37960 #> 36   1 2015-09-10 07:01:35 15.76469 -22.37960 #> 37   1 2015-09-10 07:01:36 15.76469 -22.37960 #> 38   1 2015-09-10 07:01:37 15.76469 -22.37960 #> 39   1 2015-09-10 07:01:38 15.76469 -22.37960 #> 40   1 2015-09-10 07:01:39 15.76469 -22.37960 #> 41   1 2015-09-10 07:01:40 15.76469 -22.37960 #> 42   1 2015-09-10 07:01:41 15.76469 -22.37960 #> 43   1 2015-09-10 07:01:42 15.76469 -22.37960 #> 44   1 2015-09-10 07:01:43 15.76469 -22.37960 #> 45   1 2015-09-10 07:01:44 15.76469 -22.37960 #> 46   1 2015-09-10 07:01:45 15.76469 -22.37960 #> 47   1 2015-09-10 07:01:46 15.76469 -22.37960 #> 48   1 2015-09-10 07:01:47 15.76469 -22.37960 #> 49   1 2015-09-10 07:01:48 15.76469 -22.37960 #> 50   1 2015-09-10 07:01:49 15.76469 -22.37959 #> 51   1 2015-09-10 07:01:50 15.76469 -22.37959 #> 52   1 2015-09-10 07:01:51 15.76470 -22.37959 #> 53   1 2015-09-10 07:01:52 15.76470 -22.37959 #> 54   1 2015-09-10 07:01:53 15.76470 -22.37959 #> 55   1 2015-09-10 07:01:54 15.76470 -22.37960 #> 56   1 2015-09-10 07:01:55 15.76470 -22.37960 #> 57   1 2015-09-10 07:01:56 15.76471 -22.37960 #> 58   1 2015-09-10 07:01:57 15.76471 -22.37959 #> 59   1 2015-09-10 07:01:58 15.76471 -22.37959 #> 60   1 2015-09-10 07:01:59 15.76471 -22.37959 #> 61   2 2015-09-10 07:01:00 15.76459 -22.37971 #> 62   2 2015-09-10 07:01:01 15.76459 -22.37971 #> 63   2 2015-09-10 07:01:02 15.76459 -22.37971 #> 64   2 2015-09-10 07:01:03 15.76459 -22.37971 #> 65   2 2015-09-10 07:01:04 15.76459 -22.37971 #> 66   2 2015-09-10 07:01:05 15.76459 -22.37971 #> 67   2 2015-09-10 07:01:06 15.76459 -22.37971 #> 68   2 2015-09-10 07:01:07 15.76459 -22.37971 #> 69   2 2015-09-10 07:01:08 15.76459 -22.37971 #> 70   2 2015-09-10 07:01:09 15.76459 -22.37971 #> 71   2 2015-09-10 07:01:10 15.76459 -22.37971 #> 72   2 2015-09-10 07:01:11 15.76459 -22.37971 #> 73   2 2015-09-10 07:01:12 15.76459 -22.37971 #> 74   2 2015-09-10 07:01:13 15.76459 -22.37971 #> 75   2 2015-09-10 07:01:14 15.76459 -22.37971 #> 76   2 2015-09-10 07:01:15 15.76459 -22.37971 #> 77   2 2015-09-10 07:01:16 15.76459 -22.37971 #> 78   2 2015-09-10 07:01:17 15.76459 -22.37971 #> 79   2 2015-09-10 07:01:18 15.76459 -22.37971 #> 80   2 2015-09-10 07:01:19 15.76459 -22.37971 #> 81   2 2015-09-10 07:01:20 15.76459 -22.37971 #> 82   2 2015-09-10 07:01:21 15.76459 -22.37971 #> 83   2 2015-09-10 07:01:22 15.76459 -22.37971 #> 84   2 2015-09-10 07:01:23 15.76459 -22.37971 #> 85   2 2015-09-10 07:01:24 15.76459 -22.37971 #> 86   2 2015-09-10 07:01:25 15.76458 -22.37971 #> 87   2 2015-09-10 07:01:26 15.76459 -22.37971 #> 88   2 2015-09-10 07:01:27 15.76459 -22.37971 #> 89   2 2015-09-10 07:01:28 15.76459 -22.37971 #> 90   2 2015-09-10 07:01:29 15.76458 -22.37971 #> 91   2 2015-09-10 07:01:30 15.76458 -22.37971 #> 92   2 2015-09-10 07:01:31 15.76457 -22.37971 #> 93   2 2015-09-10 07:01:32 15.76456 -22.37971 #> 94   2 2015-09-10 07:01:33 15.76455 -22.37972 #> 95   2 2015-09-10 07:01:34 15.76455 -22.37972 #> 96   2 2015-09-10 07:01:35 15.76455 -22.37973 #> 97   2 2015-09-10 07:01:36 15.76455 -22.37973 #> 98   2 2015-09-10 07:01:37 15.76455 -22.37974 #> 99   2 2015-09-10 07:01:38 15.76455 -22.37974 #> 100  2 2015-09-10 07:01:39 15.76455 -22.37975 #> 101  2 2015-09-10 07:01:40 15.76455 -22.37975 #> 102  2 2015-09-10 07:01:41 15.76454 -22.37976 #> 103  2 2015-09-10 07:01:42 15.76455 -22.37976 #> 104  2 2015-09-10 07:01:43 15.76455 -22.37976 #> 105  2 2015-09-10 07:01:44 15.76455 -22.37977 #> 106  2 2015-09-10 07:01:45 15.76456 -22.37977 #> 107  2 2015-09-10 07:01:46 15.76457 -22.37978 #> 108  2 2015-09-10 07:01:47 15.76458 -22.37978 #> 109  2 2015-09-10 07:01:48 15.76459 -22.37979 #> 110  2 2015-09-10 07:01:49 15.76459 -22.37979 #> 111  2 2015-09-10 07:01:50 15.76460 -22.37980 #> 112  2 2015-09-10 07:01:51 15.76461 -22.37980 #> 113  2 2015-09-10 07:01:52 15.76461 -22.37981 #> 114  2 2015-09-10 07:01:53 15.76461 -22.37981 #> 115  2 2015-09-10 07:01:54 15.76462 -22.37981 #> 116  2 2015-09-10 07:01:55 15.76463 -22.37982 #> 117  2 2015-09-10 07:01:56 15.76463 -22.37982 #> 118  2 2015-09-10 07:01:57 15.76464 -22.37982 #> 119  2 2015-09-10 07:01:58 15.76465 -22.37982 #> 120  2 2015-09-10 07:01:59 15.76466 -22.37982 #> 121  1 2015-09-10 07:01:00 15.76468 -22.37961 #> 122  1 2015-09-10 07:01:01 15.76469 -22.37960 #> 123  1 2015-09-10 07:01:02 15.76469 -22.37960 #> 124  1 2015-09-10 07:01:03 15.76469 -22.37960 #> 125  1 2015-09-10 07:01:04 15.76470 -22.37960 #> 126  1 2015-09-10 07:01:05 15.76469 -22.37960 #> 127  1 2015-09-10 07:01:06 15.76469 -22.37960 #> 128  1 2015-09-10 07:01:07 15.76469 -22.37959 #> 129  1 2015-09-10 07:01:08 15.76469 -22.37959 #> 130  1 2015-09-10 07:01:09 15.76469 -22.37959 #> 131  1 2015-09-10 07:01:10 15.76469 -22.37959 #> 132  1 2015-09-10 07:01:11 15.76469 -22.37960 #> 133  1 2015-09-10 07:01:12 15.76469 -22.37960 #> 134  1 2015-09-10 07:01:13 15.76469 -22.37960 #> 135  1 2015-09-10 07:01:14 15.76469 -22.37960 #> 136  1 2015-09-10 07:01:15 15.76468 -22.37960 #> 137  1 2015-09-10 07:01:16 15.76468 -22.37960 #> 138  1 2015-09-10 07:01:17 15.76468 -22.37960 #> 139  1 2015-09-10 07:01:18 15.76468 -22.37960 #> 140  1 2015-09-10 07:01:19 15.76468 -22.37960 #> 141  1 2015-09-10 07:01:20 15.76468 -22.37960 #> 142  1 2015-09-10 07:01:21 15.76468 -22.37960 #> 143  1 2015-09-10 07:01:22 15.76468 -22.37960 #> 144  1 2015-09-10 07:01:23 15.76468 -22.37960 #> 145  1 2015-09-10 07:01:24 15.76468 -22.37960 #> 146  1 2015-09-10 07:01:25 15.76468 -22.37960 #> 147  1 2015-09-10 07:01:26 15.76468 -22.37960 #> 148  1 2015-09-10 07:01:27 15.76468 -22.37960 #> 149  1 2015-09-10 07:01:28 15.76468 -22.37960 #> 150  1 2015-09-10 07:01:29 15.76468 -22.37960 #> 151  1 2015-09-10 07:01:30 15.76468 -22.37960 #> 152  1 2015-09-10 07:01:31 15.76468 -22.37960 #> 153  1 2015-09-10 07:01:32 15.76469 -22.37960 #> 154  1 2015-09-10 07:01:33 15.76469 -22.37960 #> 155  1 2015-09-10 07:01:34 15.76469 -22.37960 #> 156  1 2015-09-10 07:01:35 15.76469 -22.37960 #> 157  1 2015-09-10 07:01:36 15.76469 -22.37960 #> 158  1 2015-09-10 07:01:37 15.76469 -22.37960 #> 159  1 2015-09-10 07:01:38 15.76469 -22.37960 #> 160  1 2015-09-10 07:01:39 15.76469 -22.37960 #> 161  1 2015-09-10 07:01:40 15.76469 -22.37960 #> 162  1 2015-09-10 07:01:41 15.76469 -22.37960 #> 163  1 2015-09-10 07:01:42 15.76469 -22.37960 #> 164  1 2015-09-10 07:01:43 15.76469 -22.37960 #> 165  1 2015-09-10 07:01:44 15.76469 -22.37960 #> 166  1 2015-09-10 07:01:45 15.76469 -22.37960 #> 167  1 2015-09-10 07:01:46 15.76469 -22.37960 #> 168  1 2015-09-10 07:01:47 15.76469 -22.37960 #> 169  1 2015-09-10 07:01:48 15.76469 -22.37960 #> 170  1 2015-09-10 07:01:49 15.76469 -22.37959 #> 171  1 2015-09-10 07:01:50 15.76469 -22.37959 #> 172  1 2015-09-10 07:01:51 15.76470 -22.37959 #> 173  1 2015-09-10 07:01:52 15.76470 -22.37959 #> 174  1 2015-09-10 07:01:53 15.76470 -22.37959 #> 175  1 2015-09-10 07:01:54 15.76470 -22.37960 #> 176  1 2015-09-10 07:01:55 15.76470 -22.37960 #> 177  1 2015-09-10 07:01:56 15.76471 -22.37960 #> 178  1 2015-09-10 07:01:57 15.76471 -22.37959 #> 179  1 2015-09-10 07:01:58 15.76471 -22.37959 #> 180  1 2015-09-10 07:01:59 15.76471 -22.37959 #> 181  2 2015-09-10 07:01:00 15.76459 -22.37971 #> 182  2 2015-09-10 07:01:01 15.76459 -22.37971 #> 183  2 2015-09-10 07:01:02 15.76459 -22.37971 #> 184  2 2015-09-10 07:01:03 15.76459 -22.37971 #> 185  2 2015-09-10 07:01:04 15.76459 -22.37971 #> 186  2 2015-09-10 07:01:05 15.76459 -22.37971 #> 187  2 2015-09-10 07:01:06 15.76459 -22.37971 #> 188  2 2015-09-10 07:01:07 15.76459 -22.37971 #> 189  2 2015-09-10 07:01:08 15.76459 -22.37971 #> 190  2 2015-09-10 07:01:09 15.76459 -22.37971 #> 191  2 2015-09-10 07:01:10 15.76459 -22.37971 #> 192  2 2015-09-10 07:01:11 15.76459 -22.37971 #> 193  2 2015-09-10 07:01:12 15.76459 -22.37971 #> 194  2 2015-09-10 07:01:13 15.76459 -22.37971 #> 195  2 2015-09-10 07:01:14 15.76459 -22.37971 #> 196  2 2015-09-10 07:01:15 15.76459 -22.37971 #> 197  2 2015-09-10 07:01:16 15.76459 -22.37971 #> 198  2 2015-09-10 07:01:17 15.76459 -22.37971 #> 199  2 2015-09-10 07:01:18 15.76459 -22.37971 #> 200  2 2015-09-10 07:01:19 15.76459 -22.37971 #> 201  2 2015-09-10 07:01:20 15.76459 -22.37971 #> 202  2 2015-09-10 07:01:21 15.76459 -22.37971 #> 203  2 2015-09-10 07:01:22 15.76459 -22.37971 #> 204  2 2015-09-10 07:01:23 15.76459 -22.37971 #> 205  2 2015-09-10 07:01:24 15.76459 -22.37971 #> 206  2 2015-09-10 07:01:25 15.76458 -22.37971 #> 207  2 2015-09-10 07:01:26 15.76459 -22.37971 #> 208  2 2015-09-10 07:01:27 15.76459 -22.37971 #> 209  2 2015-09-10 07:01:28 15.76459 -22.37971 #> 210  2 2015-09-10 07:01:29 15.76458 -22.37971 #> 211  2 2015-09-10 07:01:30 15.76458 -22.37971 #> 212  2 2015-09-10 07:01:31 15.76457 -22.37971 #> 213  2 2015-09-10 07:01:32 15.76456 -22.37971 #> 214  2 2015-09-10 07:01:33 15.76455 -22.37972 #> 215  2 2015-09-10 07:01:34 15.76455 -22.37972 #> 216  2 2015-09-10 07:01:35 15.76455 -22.37973 #> 217  2 2015-09-10 07:01:36 15.76455 -22.37973 #> 218  2 2015-09-10 07:01:37 15.76455 -22.37974 #> 219  2 2015-09-10 07:01:38 15.76455 -22.37974 #> 220  2 2015-09-10 07:01:39 15.76455 -22.37975 #> 221  2 2015-09-10 07:01:40 15.76455 -22.37975 #> 222  2 2015-09-10 07:01:41 15.76454 -22.37976 #> 223  2 2015-09-10 07:01:42 15.76455 -22.37976 #> 224  2 2015-09-10 07:01:43 15.76455 -22.37976 #> 225  2 2015-09-10 07:01:44 15.76455 -22.37977 #> 226  2 2015-09-10 07:01:45 15.76456 -22.37977 #> 227  2 2015-09-10 07:01:46 15.76457 -22.37978 #> 228  2 2015-09-10 07:01:47 15.76458 -22.37978 #> 229  2 2015-09-10 07:01:48 15.76459 -22.37979 #> 230  2 2015-09-10 07:01:49 15.76459 -22.37979 #> 231  2 2015-09-10 07:01:50 15.76460 -22.37980 #> 232  2 2015-09-10 07:01:51 15.76461 -22.37980 #> 233  2 2015-09-10 07:01:52 15.76461 -22.37981 #> 234  2 2015-09-10 07:01:53 15.76461 -22.37981 #> 235  2 2015-09-10 07:01:54 15.76462 -22.37981 #> 236  2 2015-09-10 07:01:55 15.76463 -22.37982 #> 237  2 2015-09-10 07:01:56 15.76463 -22.37982 #> 238  2 2015-09-10 07:01:57 15.76464 -22.37982 #> 239  2 2015-09-10 07:01:58 15.76465 -22.37982 #> 240  2 2015-09-10 07:01:59 15.76466 -22.37982"},{"path":"https://swarm-lab.github.io/trackdf/reference/conversions.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a Track Table to/from Other Formats — conversions","title":"Convert a Track Table to/from Other Formats — conversions","text":"following methods convert track tables  common formats used processing tracking spatial data.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/conversions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a Track Table to/from Other Formats — conversions","text":"","code":"as_track(x, table = \"df\", ...)  # S3 method for MoveStack as_track(x, table = \"df\", ...)  # S3 method for Move as_track(x, table = \"df\", ...)  as_move(x, ...)  # S3 method for track as_move(x, ...)  # S3 method for SpatialPointsDataFrame as_track(x, table = \"df\", ...)  as_sp(x, ...)  # S3 method for track as_sp(x, ...)  # S3 method for ltraj as_track(x, table = \"df\", ...)  as_ltraj(x, ...)  # S3 method for track as_ltraj(x, ...)  # S3 method for telemetry as_track(x, table = \"df\", ...)  # S3 method for list as_track(x, table = \"df\", ...)  as_telemetry(x, ...)  # S3 method for track as_telemetry(x, ...)  # S3 method for moveData as_track(x, table = \"df\", type = c(\"LL\", \"UTM\"), ...)  as_moveHMM(x, ...)  # S3 method for track as_moveHMM(x, ...)"},{"path":"https://swarm-lab.github.io/trackdf/reference/conversions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a Track Table to/from Other Formats — conversions","text":"x object convert. table string indicating class table track table built. can data.frame (\"df\", default), tibble (\"tbl\"), data.table (\"dt\"). ... parameters passed : track_df, track_tbl track_dt     as_track used. moveVis::df2move as_move     used. sp::SpatialPointsDataFrame     as_sp used. adehabitatLT::.ltraj     as_ltraj used. ctmm::.telemetry     as_telemetry used. moveHMM::prepData     as_moveHMM used. type converting moveHMM::moveData track table , character string indicating type coordinates stored moveHMM::moveData object: \"LL\" longitude/latitude (default), \"UTM\" easting/northing.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/conversions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a Track Table to/from Other Formats — conversions","text":"coordinates converted chosen format.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/trackdf/reference/conversions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert a Track Table to/from Other Formats — conversions","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/conversions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a Track Table to/from Other Formats — conversions","text":"","code":"if (FALSE) { data(short_tracks)  if (requireNamespace(\"moveVis\", quietly = TRUE)) {   mv <- as_move(short_tracks)   as_track(mv) }  if (requireNamespace(\"sp\", quietly = TRUE)) {   sp <- as_sp(short_tracks)   as_track(sp) }  if (requireNamespace(\"adehabitatLT\", quietly = TRUE)) {   lt <- as_ltraj(short_tracks)   as_track(lt) }  if (requireNamespace(\"ctmm\", quietly = TRUE)) {   tl <- as_telemetry(short_tracks)   as_track(tl) }  if (requireNamespace(\"moveHMM\", quietly = TRUE)) {   hhm <- as_moveHMM(short_tracks, type = \"LL\")   as_track(hhm) } }"},{"path":"https://swarm-lab.github.io/trackdf/reference/dot-Mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute The Mode(s) Of A Discrete Distribution — .Mode","title":"Compute The Mode(s) Of A Discrete Distribution — .Mode","text":"internal utility function compute mode(s)  discrete distribution.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/dot-Mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute The Mode(s) Of A Discrete Distribution — .Mode","text":"","code":".Mode(x, na.rm = TRUE)"},{"path":"https://swarm-lab.github.io/trackdf/reference/dot-Mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute The Mode(s) Of A Discrete Distribution — .Mode","text":"x vector matrix discrete values. na.rm logical value indicating whether NA values stripped computation proceeds (default: TRUE).","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/dot-Mode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute The Mode(s) Of A Discrete Distribution — .Mode","text":"vector values corresponding mode(s) x.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/dot-Mode.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute The Mode(s) Of A Discrete Distribution — .Mode","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/dot-reclass.html","id":null,"dir":"Reference","previous_headings":"","what":"Maintain Class After Modification — .reclass","title":"Maintain Class After Modification — .reclass","text":"Copy class attributes original version object  modified version.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/dot-reclass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maintain Class After Modification — .reclass","text":"","code":".reclass(x, result)"},{"path":"https://swarm-lab.github.io/trackdf/reference/dot-reclass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maintain Class After Modification — .reclass","text":"x original object, class/attributes copy result modified object, /might missing class/attributes.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/dot-reclass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maintain Class After Modification — .reclass","text":"result, now class/attributes restored.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/dot-reclass.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Maintain Class After Modification — .reclass","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/dplyr_track.html","id":null,"dir":"Reference","previous_headings":"","what":"Dplyr Methods For Track Tables — dplyr_track","title":"Dplyr Methods For Track Tables — dplyr_track","text":"dplyr methods track tables objects.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/dplyr_track.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dplyr Methods For Track Tables — dplyr_track","text":"","code":"# S3 method for track select(.data, ...)  # S3 method for track rename(.data, ...)  # S3 method for track filter(.data, ...)  # S3 method for track arrange(.data, ...)  # S3 method for track mutate(.data, ...)  # S3 method for track transmute(.data, ...)  # S3 method for track summarise(.data, ...)  # S3 method for track summarize(.data, ...)  # S3 method for track group_by(.data, ...)  # S3 method for track ungroup(.data, ...)  # S3 method for track sample_n(.data, ...)  # S3 method for track sample_frac(.data, ...)  # S3 method for track do(.data, ...)  # S3 method for track slice(.data, ...)  # S3 method for track semi_join(.data, ...)  # S3 method for track anti_join(.data, ...)  # S3 method for track inner_join(.data, ...)  # S3 method for track left_join(.data, ...)  # S3 method for track right_join(.data, ...)  # S3 method for track full_join(.data, ...)  # S3 method for track nest_join(.data, ...)  # S3 method for track distinct(.data, ...)  # S3 method for track rowwise(.data, ...)"},{"path":"https://swarm-lab.github.io/trackdf/reference/dplyr_track.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dplyr Methods For Track Tables — dplyr_track","text":".data track table. ... Additional arguments passed corresponding dplyr method.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/trackdf/reference/duplicated_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Duplicated Timestamps in a Track Table — duplicated_t","title":"Find Duplicated Timestamps in a Track Table — duplicated_t","text":"function attempts automatically detect duplicated  timestamps track tables.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/duplicated_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Duplicated Timestamps in a Track Table — duplicated_t","text":"","code":"duplicated_t(x)"},{"path":"https://swarm-lab.github.io/trackdf/reference/duplicated_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Duplicated Timestamps in a Track Table — duplicated_t","text":"x track table produced track function.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/duplicated_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Duplicated Timestamps in a Track Table — duplicated_t","text":"data frame/table/tibble duplicated timestamps  individual track x. duplicated data detected,  function returns NULL.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/duplicated_t.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Find Duplicated Timestamps in a Track Table — duplicated_t","text":"Incomplete data (, data containing \"NAs\") ignored.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/trackdf/reference/duplicated_t.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find Duplicated Timestamps in a Track Table — duplicated_t","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/duplicated_t.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Duplicated Timestamps in a Track Table — duplicated_t","text":"","code":"# Create data set with duplicated data data(short_tracks) t_df <- track(x = short_tracks$x, y = short_tracks$y, t = short_tracks$t,               id = short_tracks$id, proj = \"+proj=longlat\",               tz = \"Africa/Windhoek\", table = \"df\") t_df <- bind_tracks(t_df, t_df[1:10, ], t_df[100:110, ])  # Find duplicated timestamps duplicated <- duplicated_t(t_df)"},{"path":"https://swarm-lab.github.io/trackdf/reference/duplicated_xyt.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Duplicated Data in a Track Table — duplicated_xyt","title":"Find Duplicated Data in a Track Table — duplicated_xyt","text":"function attempts automatically detect fully duplicated  data track tables.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/duplicated_xyt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Duplicated Data in a Track Table — duplicated_xyt","text":"","code":"duplicated_xyt(x)"},{"path":"https://swarm-lab.github.io/trackdf/reference/duplicated_xyt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Duplicated Data in a Track Table — duplicated_xyt","text":"x track table produced track function.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/duplicated_xyt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Duplicated Data in a Track Table — duplicated_xyt","text":"data frame/table/tibble duplicated timestamps  coordinates individual track x. duplicated data  detected, function returns NULL.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/duplicated_xyt.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Find Duplicated Data in a Track Table — duplicated_xyt","text":"Incomplete data (, data containing \"NAs\") ignored.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/trackdf/reference/duplicated_xyt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find Duplicated Data in a Track Table — duplicated_xyt","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/duplicated_xyt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Duplicated Data in a Track Table — duplicated_xyt","text":"","code":"# Create data set with duplicated data data(short_tracks) t_df <- track(x = short_tracks$x, y = short_tracks$y, t = short_tracks$t,               id = short_tracks$id, proj = \"+proj=longlat\",               tz = \"Africa/Windhoek\", table = \"df\") t_df <- bind_tracks(t_df, t_df[1:10, ], t_df[100:110, ])  # Find duplicated data duplicated <- duplicated_xyt(t_df)"},{"path":"https://swarm-lab.github.io/trackdf/reference/filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset rows using column values — filter","title":"Subset rows using column values — filter","text":"re-export filter function  dplyr package. See help","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset rows using column values — filter","text":".data See filter explanation. ... args","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/inconsistent_xy.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Inconsistent Locations in a Track Table — inconsistent_xy","title":"Find Inconsistent Locations in a Track Table — inconsistent_xy","text":"function attempts automatically detect inconsistent  locations (instance due writing error GPS innacuracies)  track tables.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/inconsistent_xy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Inconsistent Locations in a Track Table — inconsistent_xy","text":"","code":"inconsistent_xy(x, s = 5)"},{"path":"https://swarm-lab.github.io/trackdf/reference/inconsistent_xy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Inconsistent Locations in a Track Table — inconsistent_xy","text":"x track table produced track function. s discrimination threshold outlier detection algorithm. Higher values correspond less outliers.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/inconsistent_xy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Inconsistent Locations in a Track Table — inconsistent_xy","text":"data frame/table/tibble timestamps coordinates  inconsistent data individual track x.  inconsistencies detected, function returns NULL.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/trackdf/reference/inconsistent_xy.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find Inconsistent Locations in a Track Table — inconsistent_xy","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/inconsistent_xy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Inconsistent Locations in a Track Table — inconsistent_xy","text":"","code":"# Create data set with inconsistent data data(tracks) t_df <- track(x = tracks$x, y = tracks$y, t = tracks$t,               id = tracks$id, proj = \"+proj=longlat\",               tz = \"Africa/Windhoek\", table = \"df\") t_df$x[1000] <- t_df$x[1000] * 1.0001 t_df$y[4000] <- t_df$y[4000] * 1.00001  # Find inconsistent data inconsitent <- inconsistent_xy(t_df)"},{"path":"https://swarm-lab.github.io/trackdf/reference/is_geo.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if Track Table Uses Geographic Coordinates — is_geo","title":"Check if Track Table Uses Geographic Coordinates — is_geo","text":"Track tables produced track_df can use  cartesian (x, y, z) geographic (latitude, longitude, altitude)  coordinate system. function helps determine used  particular table.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/is_geo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if Track Table Uses Geographic Coordinates — is_geo","text":"","code":"is_geo(x)"},{"path":"https://swarm-lab.github.io/trackdf/reference/is_geo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if Track Table Uses Geographic Coordinates — is_geo","text":"x track data table produced track_df.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/is_geo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if Track Table Uses Geographic Coordinates — is_geo","text":"logical.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/is_geo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if Track Table Uses Geographic Coordinates — is_geo","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/is_geo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if Track Table Uses Geographic Coordinates — is_geo","text":"","code":"data(short_tracks)  is_geo(short_tracks) #> [1] TRUE"},{"path":"https://swarm-lab.github.io/trackdf/reference/is_track.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Validity of Track Table — is_track","title":"Check Validity of Track Table — is_track","text":"Test whether variable contains track table produced  track_df, track_tbl, track_dt.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/is_track.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Validity of Track Table — is_track","text":"","code":"is_track(x)"},{"path":"https://swarm-lab.github.io/trackdf/reference/is_track.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Validity of Track Table — is_track","text":"x object test.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/is_track.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Validity of Track Table — is_track","text":"logical indicating whether variable contains track table  (TRUE) (FALSE).","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/trackdf/reference/is_track.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check Validity of Track Table — is_track","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/is_track.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Validity of Track Table — is_track","text":"","code":"data(short_tracks)  is_track(short_tracks) #> [1] TRUE"},{"path":"https://swarm-lab.github.io/trackdf/reference/missing_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Missing Data in a Track Table — missing_t","title":"Find Missing Data in a Track Table — missing_t","text":"function attempts automatically detect missing data ( instance due writing errors) track tables.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/missing_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Missing Data in a Track Table — missing_t","text":"","code":"missing_t(x, begin = NULL, end = NULL, step = NULL)"},{"path":"https://swarm-lab.github.io/trackdf/reference/missing_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Missing Data in a Track Table — missing_t","text":"x track table produced track function. begin full timestamp (date+time) POSIXct format corresponding time missing data looked . set, first timestamp track table used. end full timestamp (date+time) POSIXct format corresponding time missing data looked . set, last timestamp track table used. step difftime object representing expected time two consecutive locations trajectory. set, set common time difference successive locations x.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/missing_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Missing Data in a Track Table — missing_t","text":"data frame/table/tibble missing timestamps  individual track x. missing data detected, function  returns NULL.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/trackdf/reference/missing_t.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find Missing Data in a Track Table — missing_t","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/missing_t.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Missing Data in a Track Table — missing_t","text":"","code":"# Create data set with missing timestamps data(short_tracks) t_df <- track(x = short_tracks$x, y = short_tracks$y, t = short_tracks$t,               id = short_tracks$id, proj = \"+proj=longlat\",               tz = \"Africa/Windhoek\", table = \"df\") t_df <- t_df[-c(10, 100), ]  # Find missing data missing <- missing_t(t_df)"},{"path":"https://swarm-lab.github.io/trackdf/reference/missing_xy.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Missing Locations in a Track Table — missing_xy","title":"Find Missing Locations in a Track Table — missing_xy","text":"function attempts automatically detect missing location  data track tables.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/missing_xy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Missing Locations in a Track Table — missing_xy","text":"","code":"missing_xy(x)"},{"path":"https://swarm-lab.github.io/trackdf/reference/missing_xy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Missing Locations in a Track Table — missing_xy","text":"x track table produced track function.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/missing_xy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Missing Locations in a Track Table — missing_xy","text":"data frame/table/tibble timestamps type missing  data individual track x. missing data detected,  function returns NULL.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/trackdf/reference/missing_xy.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find Missing Locations in a Track Table — missing_xy","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/missing_xy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Missing Locations in a Track Table — missing_xy","text":"","code":"# Create data set with missing coordinates data(short_tracks) t_df <- track(x = short_tracks$x, y = short_tracks$y, t = short_tracks$t,               id = short_tracks$id, proj = \"+proj=longlat\",               tz = \"Africa/Windhoek\", table = \"df\") t_df$x[c(10, 100)] <- NA t_df$y[c(20, 110)] <- NA  # Find missing data missing <- missing_xy(t_df)"},{"path":"https://swarm-lab.github.io/trackdf/reference/n_dims.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of Spatial Dimensions of a Track Table — n_dims","title":"Number of Spatial Dimensions of a Track Table — n_dims","text":"Track tables produced track_df can 2 (x,y)  3 (x, y, z) spatial dimensions. function returns number  spatial dimensions track table.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/n_dims.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of Spatial Dimensions of a Track Table — n_dims","text":"","code":"n_dims(x)"},{"path":"https://swarm-lab.github.io/trackdf/reference/n_dims.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of Spatial Dimensions of a Track Table — n_dims","text":"x track data table produced track_df.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/n_dims.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of Spatial Dimensions of a Track Table — n_dims","text":"numeric value.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/n_dims.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Number of Spatial Dimensions of a Track Table — n_dims","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/n_dims.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of Spatial Dimensions of a Track Table — n_dims","text":"","code":"data(short_tracks)  n_dims(short_tracks) #> [1] 2"},{"path":"https://swarm-lab.github.io/trackdf/reference/n_tracks.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of Tracks in a Track Table — n_tracks","title":"Number of Tracks in a Track Table — n_tracks","text":"Track tables produced track_df can contain  multiple tracks (e.g., different animals). function returns  number tracks track table.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/n_tracks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of Tracks in a Track Table — n_tracks","text":"","code":"n_tracks(x)"},{"path":"https://swarm-lab.github.io/trackdf/reference/n_tracks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of Tracks in a Track Table — n_tracks","text":"x track data table produced track_df.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/n_tracks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of Tracks in a Track Table — n_tracks","text":"numeric value.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/n_tracks.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Number of Tracks in a Track Table — n_tracks","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/n_tracks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of Tracks in a Track Table — n_tracks","text":"","code":"data(short_tracks)  n_tracks(short_tracks) #> [1] 2"},{"path":"https://swarm-lab.github.io/trackdf/reference/projection.html","id":null,"dir":"Reference","previous_headings":"","what":"Access/Modify the Projection of a Track Table — projection","title":"Access/Modify the Projection of a Track Table — projection","text":"Functions access modify projection data table.  Changing projection trigger automatically conversion  locations new coordinate system.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/projection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access/Modify the Projection of a Track Table — projection","text":"","code":"projection(x)  projection(x) <- value  project(x, value)"},{"path":"https://swarm-lab.github.io/trackdf/reference/projection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access/Modify the Projection of a Track Table — projection","text":"x track table. value character string terra::crs object representing projection coordinates. \"+proj=longlat\" suitable outputs GPS trackers.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/projection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access/Modify the Projection of a Track Table — projection","text":"track table.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/projection.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Access/Modify the Projection of a Track Table — projection","text":"possible modify projection missing coordinates  present.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/projection.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Access/Modify the Projection of a Track Table — projection","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/projection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access/Modify the Projection of a Track Table — projection","text":"","code":"data(short_tracks)  projection(short_tracks) #> Coordinate Reference System: #>   User input: +proj=longlat  #>   wkt: #> GEOGCRS[\"unknown\", #>     DATUM[\"World Geodetic System 1984\", #>         ELLIPSOID[\"WGS 84\",6378137,298.257223563, #>             LENGTHUNIT[\"metre\",1]], #>         ID[\"EPSG\",6326]], #>     PRIMEM[\"Greenwich\",0, #>         ANGLEUNIT[\"degree\",0.0174532925199433], #>         ID[\"EPSG\",8901]], #>     CS[ellipsoidal,2], #>         AXIS[\"longitude\",east, #>             ORDER[1], #>             ANGLEUNIT[\"degree\",0.0174532925199433, #>                 ID[\"EPSG\",9122]]], #>         AXIS[\"latitude\",north, #>             ORDER[2], #>             ANGLEUNIT[\"degree\",0.0174532925199433, #>                 ID[\"EPSG\",9122]]]] tracks_projected <- project(short_tracks, \"+proj=somerc\") projection(tracks_projected) #> Coordinate Reference System: #>   User input: +proj=somerc  #>   wkt: #> PROJCRS[\"unknown\", #>     BASEGEOGCRS[\"unknown\", #>         DATUM[\"World Geodetic System 1984\", #>             ELLIPSOID[\"WGS 84\",6378137,298.257223563, #>                 LENGTHUNIT[\"metre\",1]], #>             ID[\"EPSG\",6326]], #>         PRIMEM[\"Greenwich\",0, #>             ANGLEUNIT[\"degree\",0.0174532925199433], #>             ID[\"EPSG\",8901]]], #>     CONVERSION[\"unknown\", #>         METHOD[\"Hotine Oblique Mercator (variant B)\", #>             ID[\"EPSG\",9815]], #>         PARAMETER[\"Latitude of projection centre\",0, #>             ANGLEUNIT[\"degree\",0.0174532925199433], #>             ID[\"EPSG\",8811]], #>         PARAMETER[\"Longitude of projection centre\",0, #>             ANGLEUNIT[\"degree\",0.0174532925199433], #>             ID[\"EPSG\",8812]], #>         PARAMETER[\"Azimuth of initial line\",90, #>             ANGLEUNIT[\"degree\",0.0174532925199433], #>             ID[\"EPSG\",8813]], #>         PARAMETER[\"Angle from Rectified to Skew Grid\",90, #>             ANGLEUNIT[\"degree\",0.0174532925199433], #>             ID[\"EPSG\",8814]], #>         PARAMETER[\"Scale factor on initial line\",1, #>             SCALEUNIT[\"unity\",1], #>             ID[\"EPSG\",8815]], #>         PARAMETER[\"Easting at projection centre\",0, #>             LENGTHUNIT[\"metre\",1], #>             ID[\"EPSG\",8816]], #>         PARAMETER[\"Northing at projection centre\",0, #>             LENGTHUNIT[\"metre\",1], #>             ID[\"EPSG\",8817]]], #>     CS[Cartesian,2], #>         AXIS[\"(E)\",east, #>             ORDER[1], #>             LENGTHUNIT[\"metre\",1, #>                 ID[\"EPSG\",9001]]], #>         AXIS[\"(N)\",north, #>             ORDER[2], #>             LENGTHUNIT[\"metre\",1, #>                 ID[\"EPSG\",9001]]]] projection(tracks_projected) <- \"+proj=longlat\" projection(tracks_projected) #> Coordinate Reference System: #>   User input: +proj=longlat  #>   wkt: #> GEOGCRS[\"unknown\", #>     DATUM[\"World Geodetic System 1984\", #>         ELLIPSOID[\"WGS 84\",6378137,298.257223563, #>             LENGTHUNIT[\"metre\",1]], #>         ID[\"EPSG\",6326]], #>     PRIMEM[\"Greenwich\",0, #>         ANGLEUNIT[\"degree\",0.0174532925199433], #>         ID[\"EPSG\",8901]], #>     CS[ellipsoidal,2], #>         AXIS[\"longitude\",east, #>             ORDER[1], #>             ANGLEUNIT[\"degree\",0.0174532925199433, #>                 ID[\"EPSG\",9122]]], #>         AXIS[\"latitude\",north, #>             ORDER[2], #>             ANGLEUNIT[\"degree\",0.0174532925199433, #>                 ID[\"EPSG\",9122]]]]"},{"path":"https://swarm-lab.github.io/trackdf/reference/short_tracks.html","id":null,"dir":"Reference","previous_headings":"","what":"Trajectories of Two Goats Through the Namibian Desert (short version) — short_tracks","title":"Trajectories of Two Goats Through the Namibian Desert (short version) — short_tracks","text":"dataset containing trajectories two goats  Namibian desert.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/short_tracks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trajectories of Two Goats Through the Namibian Desert (short version) — short_tracks","text":"","code":"short_tracks"},{"path":"https://swarm-lab.github.io/trackdf/reference/short_tracks.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Trajectories of Two Goats Through the Namibian Desert (short version) — short_tracks","text":"track table 18 rows 4 variables: id Identity goat t Time observation x Longitude y Latitude","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/sub-.track.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract or Replace Parts of a Track Table — [.track","title":"Extract or Replace Parts of a Track Table — [.track","text":"Accessing columns, rows, cells via $, [[, [ mostly  similar regular data frames.  However, behavior sometimes different track tables based  tibble data.table.  info, refer tibble's  data.table's subsetting documentation.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/sub-.track.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract or Replace Parts of a Track Table — [.track","text":"","code":"# S3 method for track [(x, ...)  # S3 method for track [(x, ...) <- value"},{"path":"https://swarm-lab.github.io/trackdf/reference/sub-.track.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract or Replace Parts of a Track Table — [.track","text":"x track table. ... parameters passed extracting/subsetting functions data.frame, tibble, data.table. value suitable replacement value: repeated whole number times necessary may coerced: see `Coercion` section data.frame. `NULL`, deletes column single column selected.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/sub-.track.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract or Replace Parts of a Track Table — [.track","text":"subset track table [ called, modified version  track table [<- called.","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/trackdf/reference/sub-.track.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract or Replace Parts of a Track Table — [.track","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/sub-.track.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract or Replace Parts of a Track Table — [.track","text":"","code":"data(short_tracks)  short_tracks[1] #>     id #> 1    1 #> 2    1 #> 3    1 #> 4    1 #> 5    1 #> 6    1 #> 7    1 #> 8    1 #> 9    1 #> 10   1 #> 11   1 #> 12   1 #> 13   1 #> 14   1 #> 15   1 #> 16   1 #> 17   1 #> 18   1 #> 19   1 #> 20   1 #> 21   1 #> 22   1 #> 23   1 #> 24   1 #> 25   1 #> 26   1 #> 27   1 #> 28   1 #> 29   1 #> 30   1 #> 31   1 #> 32   1 #> 33   1 #> 34   1 #> 35   1 #> 36   1 #> 37   1 #> 38   1 #> 39   1 #> 40   1 #> 41   1 #> 42   1 #> 43   1 #> 44   1 #> 45   1 #> 46   1 #> 47   1 #> 48   1 #> 49   1 #> 50   1 #> 51   1 #> 52   1 #> 53   1 #> 54   1 #> 55   1 #> 56   1 #> 57   1 #> 58   1 #> 59   1 #> 60   1 #> 61   2 #> 62   2 #> 63   2 #> 64   2 #> 65   2 #> 66   2 #> 67   2 #> 68   2 #> 69   2 #> 70   2 #> 71   2 #> 72   2 #> 73   2 #> 74   2 #> 75   2 #> 76   2 #> 77   2 #> 78   2 #> 79   2 #> 80   2 #> 81   2 #> 82   2 #> 83   2 #> 84   2 #> 85   2 #> 86   2 #> 87   2 #> 88   2 #> 89   2 #> 90   2 #> 91   2 #> 92   2 #> 93   2 #> 94   2 #> 95   2 #> 96   2 #> 97   2 #> 98   2 #> 99   2 #> 100  2 #> 101  2 #> 102  2 #> 103  2 #> 104  2 #> 105  2 #> 106  2 #> 107  2 #> 108  2 #> 109  2 #> 110  2 #> 111  2 #> 112  2 #> 113  2 #> 114  2 #> 115  2 #> 116  2 #> 117  2 #> 118  2 #> 119  2 #> 120  2 short_tracks[1, ] #> Track table [1 observations] #> Number of tracks:  1  #> Dimensions:  2D  #> Geographic:  TRUE  #> Projection:  +proj=longlat  #> Table class:  data frame #>   id                   t        x         y #> 1  1 2015-09-10 07:01:00 15.76468 -22.37961 short_tracks[1, 1] #> [1] \"1\" short_tracks$id[short_tracks$id == \"1\"] <- \"0\" short_tracks[short_tracks[, 1] == \"0\", 1] <- \"1\""},{"path":"https://swarm-lab.github.io/trackdf/reference/track_.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a Track Table — track_","title":"Build a Track Table — track_","text":"track constructs track tables based data.frame  (default), tibble, data.table.  track convenience function executes track_df,  track_tbl, track_dt based value `table`  parameter. Track tables can used like data structure build  upon notable difference: extra attribute store  projection track coordinates, modifying projection  automatically trigger appropriate conversion coordinates.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/track_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a Track Table — track_","text":"","code":"track(x, y, z, t, id, ..., proj, origin, period, tz, format, table = \"df\")  track_df(x, y, z, t, id, ..., proj, origin, period, tz, format)  track_tbl(x, y, z, t, id, ..., proj, origin, period, tz, format)  track_dt(x, y, z, t, id, ..., proj, origin, period, tz, format)"},{"path":"https://swarm-lab.github.io/trackdf/reference/track_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a Track Table — track_","text":"x, y, z Numeric vectors representing coordinates locations. x y required. z can ignored trajectories 2-dimensional. Note: vectors length, shorter ones recycled match length longer one. t numeric vector vector objects can coerced date-time objects as_datetime representing times (frames) location recorded. numeric, origin period time points can set using origin period . id vector can coerced character vector .character representing identity animal location belong. ... set name-value pairs. Arguments evaluated sequentially, can refer previously created elements. arguments processed rlang::quos() support unquote via !! unquote-splice via !!!. Use := create columns start dot. proj character string terra::crs object representing projection coordinates. Leave empty coordinates projected (e.g., output video tracking). \"+proj=longlat\" suitable output GPS trackers. origin Something can coerced date-time object as_datetime representing start date time observations t numeric vector. period character vector shorthand format (e.g. \"1 second\") ISO 8601 specification. used t numeric vector represent time unit observations. unambiguous name units abbreviations supported, \"m\" stands months, \"M\" minutes unless ISO 8601 \"P\" modifier present (see examples). Fractional units supported fractional part always converted seconds. See period details. tz time zone name. See OlsonNames. format character string indicating formatting `t`. See  strptime specify parameter. supplied parsing performed strptime(). reason consider using specialized parsing functions lubridate. table string indicating class table track table built. can data.frame (\"df\", default), tibble (\"tbl\"), data.table (\"dt\").","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/track_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a Track Table — track_","text":"track table, colloquial term object class  track.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/track_.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Build a Track Table — track_","text":"Simon Garnier, garnier@njit.edu","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/track_.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build a Track Table — track_","text":"","code":"data(short_tracks)  t_df <- track(x = short_tracks$x, y = short_tracks$y, t = short_tracks$t,   id = short_tracks$id, proj = \"+proj=longlat\", tz = \"Africa/Windhoek\", table = \"df\")  t_df <- track_df(x = short_tracks$x, y = short_tracks$y, t = short_tracks$t,   id = short_tracks$id, proj = \"+proj=longlat\", tz = \"Africa/Windhoek\")  t_tbl <- track_tbl(x = short_tracks$x, y = short_tracks$y, t = short_tracks$t, id = short_tracks$id, proj = \"+proj=longlat\", tz = \"Africa/Windhoek\")  t_dt <- track_dt(x = short_tracks$x, y = short_tracks$y, t = short_tracks$t,   id = short_tracks$id, proj = \"+proj=longlat\", tz = \"Africa/Windhoek\")"},{"path":"https://swarm-lab.github.io/trackdf/reference/tracks.html","id":null,"dir":"Reference","previous_headings":"","what":"Trajectories of Two Goats Through the Namibian Desert — tracks","title":"Trajectories of Two Goats Through the Namibian Desert — tracks","text":"dataset containing trajectories two goats  Namibian desert.","code":""},{"path":"https://swarm-lab.github.io/trackdf/reference/tracks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trajectories of Two Goats Through the Namibian Desert — tracks","text":"","code":"tracks"},{"path":"https://swarm-lab.github.io/trackdf/reference/tracks.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Trajectories of Two Goats Through the Namibian Desert — tracks","text":"track table 7194 rows 4 variables: id Identity goat t Time observation x Longitude y Latitude","code":""},{"path":[]},{"path":"https://swarm-lab.github.io/trackdf/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"New features","title":"trackdf 0.3.0","text":"Adds error detection functions. Removes dplyr dependency (necessary anymore). Replaces sp sf handling projections.","code":""},{"path":"https://swarm-lab.github.io/trackdf/news/index.html","id":"minor-improvements-and-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"Minor improvements and fixes","title":"trackdf 0.3.0","text":"Cleans functions documentation.","code":""},{"path":"https://swarm-lab.github.io/trackdf/news/index.html","id":"trackdf-022","dir":"Changelog","previous_headings":"","what":"trackdf 0.2.2","title":"trackdf 0.2.2","text":"CRAN release: 2021-01-13","code":""},{"path":"https://swarm-lab.github.io/trackdf/news/index.html","id":"new-features-0-2-2","dir":"Changelog","previous_headings":"","what":"New features","title":"trackdf 0.2.2","text":"N/","code":""},{"path":"https://swarm-lab.github.io/trackdf/news/index.html","id":"minor-improvements-and-fixes-0-2-2","dir":"Changelog","previous_headings":"","what":"Minor improvements and fixes","title":"trackdf 0.2.2","text":"Fixes issue preventing adding 1 extra column creation track. Adds possibility provide date formatting creating track.","code":""},{"path":"https://swarm-lab.github.io/trackdf/news/index.html","id":"trackdf-021","dir":"Changelog","previous_headings":"","what":"trackdf 0.2.1","title":"trackdf 0.2.1","text":"CRAN release: 2019-08-04","code":""},{"path":"https://swarm-lab.github.io/trackdf/news/index.html","id":"new-features-0-2-1","dir":"Changelog","previous_headings":"","what":"New features","title":"trackdf 0.2.1","text":"N/","code":""},{"path":"https://swarm-lab.github.io/trackdf/news/index.html","id":"minor-improvements-and-fixes-0-2-1","dir":"Changelog","previous_headings":"","what":"Minor improvements and fixes","title":"trackdf 0.2.1","text":"Fixes examples vignettes run suggested packages present system.","code":""},{"path":"https://swarm-lab.github.io/trackdf/news/index.html","id":"trackdf-020","dir":"Changelog","previous_headings":"","what":"trackdf 0.2.0","title":"trackdf 0.2.0","text":"CRAN release: 2019-08-03","code":""},{"path":"https://swarm-lab.github.io/trackdf/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"New features","title":"trackdf 0.2.0","text":"Package ready release CRAN.","code":""},{"path":"https://swarm-lab.github.io/trackdf/news/index.html","id":"minor-improvements-and-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Minor improvements and fixes","title":"trackdf 0.2.0","text":"N/","code":""}]
